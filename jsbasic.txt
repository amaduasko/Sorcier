function reverseArray(array){
    var someArray = [];
    for (var i = array.length; i > 0 ; i--){
        someArray.push(array.pop());
    }
    return someArray;
}
function reverseArrayInPlace(array) {

  var first = 0;
  var last = array.length - 1;

  while (first < last) {
    var b = array[first];
    array[first] = array[last];
    array[last] = b;

    first++;
    last--;
  }
return array;
}

console.log(reverseArray([1,2,3,4]));
console.log(reverseArrayInPlace(['A','B','C','D']));
////////////////////////////////////////////////////////////////////

function isgreterthanfive(startvalue){
	return startvalue > 5;
}
console.log([2,5,3,4,1].every(isgreterthanfive));
var modulotree = function(myvalu){
	return myvalu % 3 === 0;
}
console.log([2,5,3,4,1].some(modulotree));
//////////////////////////////////////////////////////////////////
//How To Compare Object Values
var a = { one: 1, two: '2' };
var b = { one: 1, two: '2' };
var c = { two: '2' };
var d = { one: 1, two: 2 };

function deepCompare(obj1, obj2) {

	for (var p in obj1) {
  
		if (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;
 
		switch (typeof (obj1[p])) {
			
			case 'object':
				if (!Object.compare(obj1[p], obj2[p])) return false;
				break;
			
			case 'function':
				if (typeof (obj2[p]) === 'undefined' || (p !== 'compare' && obj1[p].toString() !== obj2[p].toString())) return false;
				break;
			//Compare values
			default:
				if (obj1[p] !== obj2[p]) return false;
		}
	}
 
	//Check object 2 for any extra properties
	for (var p in obj2) {
		if (typeof (obj1[p]) === 'undefined') return false;
	}
	return true;
};
console.log(deepCompare(a, b));  //truea
console.log(deepCompare(a, c));  //true 
console.log(deepCompare(a, d));  //false
/* console.log(deepCompare({ one: 1, two: ‘2’ }, { one: 1, two:
‘2’ })); */
//////////////////////////////////////////////////////////////////
function replaceQuotes(string){
 	return string.replace(/'/g, '"');
  }
console.log(replaceQuotes("I’m the ‘hero’"));
//chess
function chessBoard(rows, columns){
	var arr = [];
	for(var i = 0; i < rows; i ++){
		arr.push([]);
		arr[i].push( new Array(columns));
		for(var j = 0; j < columns ; j ++) {
			if(j%2 == 0){
				arr[i][j] = "#";
			}else{
				arr[i][j] = " ";
			}
		}
	}
	return arr;
}
console.log (chessBoard(8,8));
/////////////////////////////////////////////////////////////////////////////////////
/////makingArray
function makeArray(start, end, step = 1) {
  const len = Math.floor((end - start) / step) + 1
  return Array(len).fill().map((_, idx) => start + (idx * step))
}
console.log(makeArray(1 , 10));
console.log(makeArray(1 , 10 , 3));
console.log(makeArray(10 , 1, -2));
///mergearray
function mergeArrays(...array) {
    var a = array.concat();
    for(var i=0; i<a.length; ++i) {
        for(var j=i+1; j<a.length; ++j) {
            if(a[i] === a[j])
                a.splice(j--, 1);
        }
    }

    return a;
}

console.log(mergeArrays([1, 2], [3, 4], [5, 6]));
console.log(mergeArrays([1, 2], [2, 4], [4, 6]));
//////////////////////////////////////////////////////////////?????

function getFormattedDate(today) 
{
    var week = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
    var mois =  new Array( 'Janvier', 'Fevrier', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Aout', 'Septembre', 'Octobre', 'Novembre', 'Decembre');	
    var day  = week[today.getDay()];
    var dd   = today.getDate();
    var mm   = mois[today.getMonth()]; //January is 0!

    if(dd<10)  { dd='0'+dd } 
    if(mm<10)  { mm='0'+mm } 

    return mm+ ","+day;
}

var date = new Date();
var text = getFormattedDate(date);
////////////////////////////////////////////////////////////////////////////
function differenceInYears(date1, date2){
var timeDiff = Math.abs(date2.getTime() - date1.getTime());
var diffYear = Math.ceil((timeDiff / (1000 * 3600 * 24))/365) - 1;
  if (diffYear === 0) {
          diffYear = - Math.fround(((timeDiff / (1000 * 3600 * 24))/365) - 1);
       }
return diffYear;